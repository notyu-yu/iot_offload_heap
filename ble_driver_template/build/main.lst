ARM GAS  /tmp/ccf94hcN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB134:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "app_bluenrg_ms.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccf94hcN.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  88:Core/Src/main.c ****   MX_BlueNRG_MS_Init();
ARM GAS  /tmp/ccf94hcN.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Infinite loop */
  94:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  95:Core/Src/main.c ****   while (1)
  96:Core/Src/main.c ****   {
  97:Core/Src/main.c ****     /* USER CODE END WHILE */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   MX_BlueNRG_MS_Process();
 100:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c ****   /* USER CODE END 3 */
 103:Core/Src/main.c **** }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief System Clock Configuration
 107:Core/Src/main.c ****   * @retval None
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** void SystemClock_Config(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****     Error_Handler();
 119:Core/Src/main.c ****   }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 122:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     Error_Handler();
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccf94hcN.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief GPIO Initialization Function
 156:Core/Src/main.c ****   * @param None
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** static void MX_GPIO_Init(void)
 160:Core/Src/main.c **** {
  28              		.loc 1 160 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 161:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 161 3 view .LVU1
  42              		.loc 1 161 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 164:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 164 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 164 3 view .LVU4
  52              		.loc 1 164 3 view .LVU5
  53 0010 294B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 164 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 164 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 164 3 view .LVU8
 165:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
ARM GAS  /tmp/ccf94hcN.s 			page 5


  65              		.loc 1 165 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 165 3 view .LVU10
  68              		.loc 1 165 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F08002 		orr	r2, r2, #128
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 165 3 view .LVU12
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F08002 		and	r2, r2, #128
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 165 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 165 3 view .LVU14
 166:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 166 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 166 3 view .LVU16
  83              		.loc 1 166 3 view .LVU17
  84 0036 DA6C     		ldr	r2, [r3, #76]
  85 0038 42F00102 		orr	r2, r2, #1
  86 003c DA64     		str	r2, [r3, #76]
  87              		.loc 1 166 3 view .LVU18
  88 003e DA6C     		ldr	r2, [r3, #76]
  89 0040 02F00102 		and	r2, r2, #1
  90 0044 0392     		str	r2, [sp, #12]
  91              		.loc 1 166 3 view .LVU19
  92 0046 039A     		ldr	r2, [sp, #12]
  93              	.LBE6:
  94              		.loc 1 166 3 view .LVU20
 167:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  95              		.loc 1 167 3 view .LVU21
  96              	.LBB7:
  97              		.loc 1 167 3 view .LVU22
  98              		.loc 1 167 3 view .LVU23
  99 0048 DA6C     		ldr	r2, [r3, #76]
 100 004a 42F00202 		orr	r2, r2, #2
 101 004e DA64     		str	r2, [r3, #76]
 102              		.loc 1 167 3 view .LVU24
 103 0050 DB6C     		ldr	r3, [r3, #76]
 104 0052 03F00203 		and	r3, r3, #2
 105 0056 0493     		str	r3, [sp, #16]
 106              		.loc 1 167 3 view .LVU25
 107 0058 049B     		ldr	r3, [sp, #16]
 108              	.LBE7:
 109              		.loc 1 167 3 view .LVU26
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 170:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1|GPIO_PIN_8, GPIO_PIN_RESET);
 110              		.loc 1 170 3 view .LVU27
 111 005a 2246     		mov	r2, r4
 112 005c 4FF48171 		mov	r1, #258
 113 0060 4FF09040 		mov	r0, #1207959552
 114 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL0:
 171:Core/Src/main.c **** 
ARM GAS  /tmp/ccf94hcN.s 			page 6


 172:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 173:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 116              		.loc 1 173 3 view .LVU28
 117              		.loc 1 173 23 is_stmt 0 view .LVU29
 118 0068 0125     		movs	r5, #1
 119 006a 0595     		str	r5, [sp, #20]
 174:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 120              		.loc 1 174 3 is_stmt 1 view .LVU30
 121              		.loc 1 174 24 is_stmt 0 view .LVU31
 122 006c 4FF48813 		mov	r3, #1114112
 123 0070 0693     		str	r3, [sp, #24]
 175:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 175 3 is_stmt 1 view .LVU32
 125              		.loc 1 175 24 is_stmt 0 view .LVU33
 126 0072 0794     		str	r4, [sp, #28]
 176:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 127              		.loc 1 176 3 is_stmt 1 view .LVU34
 128 0074 05A9     		add	r1, sp, #20
 129 0076 4FF09040 		mov	r0, #1207959552
 130 007a FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL1:
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /*Configure GPIO pins : PA1 PA8 */
 179:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_8;
 132              		.loc 1 179 3 view .LVU35
 133              		.loc 1 179 23 is_stmt 0 view .LVU36
 134 007e 4FF48173 		mov	r3, #258
 135 0082 0593     		str	r3, [sp, #20]
 180:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 136              		.loc 1 180 3 is_stmt 1 view .LVU37
 137              		.loc 1 180 24 is_stmt 0 view .LVU38
 138 0084 0695     		str	r5, [sp, #24]
 181:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 181 3 is_stmt 1 view .LVU39
 140              		.loc 1 181 24 is_stmt 0 view .LVU40
 141 0086 0794     		str	r4, [sp, #28]
 182:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 182 3 is_stmt 1 view .LVU41
 143              		.loc 1 182 25 is_stmt 0 view .LVU42
 144 0088 0894     		str	r4, [sp, #32]
 183:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 145              		.loc 1 183 3 is_stmt 1 view .LVU43
 146 008a 05A9     		add	r1, sp, #20
 147 008c 4FF09040 		mov	r0, #1207959552
 148 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* EXTI interrupt init*/
 186:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 150              		.loc 1 186 3 view .LVU44
 151 0094 2246     		mov	r2, r4
 152 0096 2146     		mov	r1, r4
 153 0098 0620     		movs	r0, #6
 154 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 155              	.LVL3:
 187:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 156              		.loc 1 187 3 view .LVU45
ARM GAS  /tmp/ccf94hcN.s 			page 7


 157 009e 0620     		movs	r0, #6
 158 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 159              	.LVL4:
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 160              		.loc 1 189 3 view .LVU46
 161 00a4 2246     		mov	r2, r4
 162 00a6 2146     		mov	r1, r4
 163 00a8 2820     		movs	r0, #40
 164 00aa FFF7FEFF 		bl	HAL_NVIC_SetPriority
 165              	.LVL5:
 190:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 166              		.loc 1 190 3 view .LVU47
 167 00ae 2820     		movs	r0, #40
 168 00b0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 169              	.LVL6:
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** }
 170              		.loc 1 192 1 is_stmt 0 view .LVU48
 171 00b4 0BB0     		add	sp, sp, #44
 172              	.LCFI2:
 173              		.cfi_def_cfa_offset 12
 174              		@ sp needed
 175 00b6 30BD     		pop	{r4, r5, pc}
 176              	.L4:
 177              		.align	2
 178              	.L3:
 179 00b8 00100240 		.word	1073876992
 180              		.cfi_endproc
 181              	.LFE134:
 183              		.section	.text.Error_Handler,"ax",%progbits
 184              		.align	1
 185              		.global	Error_Handler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	Error_Handler:
 191              	.LFB135:
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /* USER CODE END 4 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** void Error_Handler(void)
 203:Core/Src/main.c **** {
 192              		.loc 1 203 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ Volatile: function does not return.
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 204:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 205:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  /tmp/ccf94hcN.s 			page 8


 206:Core/Src/main.c ****   __disable_irq();
 198              		.loc 1 206 3 view .LVU50
 199              	.LBB8:
 200              	.LBI8:
 201              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  /tmp/ccf94hcN.s 			page 9


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccf94hcN.s 			page 10


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
ARM GAS  /tmp/ccf94hcN.s 			page 11


 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 202              		.loc 2 207 27 view .LVU51
 203              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 204              		.loc 2 209 3 view .LVU52
 205              		.syntax unified
 206              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 207 0000 72B6     		cpsid i
 208              	@ 0 "" 2
 209              		.thumb
 210              		.syntax unified
 211              	.L6:
 212              	.LBE9:
 213              	.LBE8:
 207:Core/Src/main.c ****   while (1)
 214              		.loc 1 207 3 discriminator 1 view .LVU53
ARM GAS  /tmp/ccf94hcN.s 			page 12


 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****   }
 215              		.loc 1 209 3 discriminator 1 view .LVU54
 207:Core/Src/main.c ****   while (1)
 216              		.loc 1 207 9 discriminator 1 view .LVU55
 217 0002 FEE7     		b	.L6
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.text.SystemClock_Config,"ax",%progbits
 222              		.align	1
 223              		.global	SystemClock_Config
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	SystemClock_Config:
 229              	.LFB133:
 110:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 230              		.loc 1 110 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 88
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 00B5     		push	{lr}
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 14, -4
 238 0002 97B0     		sub	sp, sp, #92
 239              	.LCFI4:
 240              		.cfi_def_cfa_offset 96
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 241              		.loc 1 111 3 view .LVU57
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 242              		.loc 1 111 22 is_stmt 0 view .LVU58
 243 0004 4422     		movs	r2, #68
 244 0006 0021     		movs	r1, #0
 245 0008 05A8     		add	r0, sp, #20
 246 000a FFF7FEFF 		bl	memset
 247              	.LVL7:
 112:Core/Src/main.c **** 
 248              		.loc 1 112 3 is_stmt 1 view .LVU59
 112:Core/Src/main.c **** 
 249              		.loc 1 112 22 is_stmt 0 view .LVU60
 250 000e 0023     		movs	r3, #0
 251 0010 0093     		str	r3, [sp]
 252 0012 0193     		str	r3, [sp, #4]
 253 0014 0293     		str	r3, [sp, #8]
 254 0016 0393     		str	r3, [sp, #12]
 255 0018 0493     		str	r3, [sp, #16]
 116:Core/Src/main.c ****   {
 256              		.loc 1 116 3 is_stmt 1 view .LVU61
 116:Core/Src/main.c ****   {
 257              		.loc 1 116 7 is_stmt 0 view .LVU62
 258 001a 4FF40070 		mov	r0, #512
 259 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 260              	.LVL8:
 116:Core/Src/main.c ****   {
 261              		.loc 1 116 6 view .LVU63
 262 0022 20BB     		cbnz	r0, .L12
ARM GAS  /tmp/ccf94hcN.s 			page 13


 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 263              		.loc 1 124 3 is_stmt 1 view .LVU64
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 264              		.loc 1 124 36 is_stmt 0 view .LVU65
 265 0024 0223     		movs	r3, #2
 266 0026 0593     		str	r3, [sp, #20]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 267              		.loc 1 125 3 is_stmt 1 view .LVU66
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 268              		.loc 1 125 30 is_stmt 0 view .LVU67
 269 0028 4FF48072 		mov	r2, #256
 270 002c 0892     		str	r2, [sp, #32]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 271              		.loc 1 126 3 is_stmt 1 view .LVU68
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 272              		.loc 1 126 41 is_stmt 0 view .LVU69
 273 002e 4022     		movs	r2, #64
 274 0030 0992     		str	r2, [sp, #36]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 275              		.loc 1 127 3 is_stmt 1 view .LVU70
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 276              		.loc 1 127 34 is_stmt 0 view .LVU71
 277 0032 0F93     		str	r3, [sp, #60]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 278              		.loc 1 128 3 is_stmt 1 view .LVU72
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 279              		.loc 1 128 35 is_stmt 0 view .LVU73
 280 0034 1093     		str	r3, [sp, #64]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 281              		.loc 1 129 3 is_stmt 1 view .LVU74
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 282              		.loc 1 129 30 is_stmt 0 view .LVU75
 283 0036 0122     		movs	r2, #1
 284 0038 1192     		str	r2, [sp, #68]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 285              		.loc 1 130 3 is_stmt 1 view .LVU76
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 286              		.loc 1 130 30 is_stmt 0 view .LVU77
 287 003a 0A22     		movs	r2, #10
 288 003c 1292     		str	r2, [sp, #72]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 289              		.loc 1 131 3 is_stmt 1 view .LVU78
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 290              		.loc 1 131 30 is_stmt 0 view .LVU79
 291 003e 0722     		movs	r2, #7
 292 0040 1392     		str	r2, [sp, #76]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 293              		.loc 1 132 3 is_stmt 1 view .LVU80
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 294              		.loc 1 132 30 is_stmt 0 view .LVU81
 295 0042 1493     		str	r3, [sp, #80]
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 296              		.loc 1 133 3 is_stmt 1 view .LVU82
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 297              		.loc 1 133 30 is_stmt 0 view .LVU83
 298 0044 1593     		str	r3, [sp, #84]
 134:Core/Src/main.c ****   {
ARM GAS  /tmp/ccf94hcN.s 			page 14


 299              		.loc 1 134 3 is_stmt 1 view .LVU84
 134:Core/Src/main.c ****   {
 300              		.loc 1 134 7 is_stmt 0 view .LVU85
 301 0046 05A8     		add	r0, sp, #20
 302 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 303              	.LVL9:
 134:Core/Src/main.c ****   {
 304              		.loc 1 134 6 view .LVU86
 305 004c 88B9     		cbnz	r0, .L13
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 306              		.loc 1 141 3 is_stmt 1 view .LVU87
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 307              		.loc 1 141 31 is_stmt 0 view .LVU88
 308 004e 0F23     		movs	r3, #15
 309 0050 0093     		str	r3, [sp]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 310              		.loc 1 143 3 is_stmt 1 view .LVU89
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 311              		.loc 1 143 34 is_stmt 0 view .LVU90
 312 0052 0323     		movs	r3, #3
 313 0054 0193     		str	r3, [sp, #4]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 314              		.loc 1 144 3 is_stmt 1 view .LVU91
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 315              		.loc 1 144 35 is_stmt 0 view .LVU92
 316 0056 0023     		movs	r3, #0
 317 0058 0293     		str	r3, [sp, #8]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 318              		.loc 1 145 3 is_stmt 1 view .LVU93
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 319              		.loc 1 145 36 is_stmt 0 view .LVU94
 320 005a 0393     		str	r3, [sp, #12]
 146:Core/Src/main.c **** 
 321              		.loc 1 146 3 is_stmt 1 view .LVU95
 146:Core/Src/main.c **** 
 322              		.loc 1 146 36 is_stmt 0 view .LVU96
 323 005c 0493     		str	r3, [sp, #16]
 148:Core/Src/main.c ****   {
 324              		.loc 1 148 3 is_stmt 1 view .LVU97
 148:Core/Src/main.c ****   {
 325              		.loc 1 148 7 is_stmt 0 view .LVU98
 326 005e 0421     		movs	r1, #4
 327 0060 6846     		mov	r0, sp
 328 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 329              	.LVL10:
 148:Core/Src/main.c ****   {
 330              		.loc 1 148 6 view .LVU99
 331 0066 30B9     		cbnz	r0, .L14
 152:Core/Src/main.c **** 
 332              		.loc 1 152 1 view .LVU100
 333 0068 17B0     		add	sp, sp, #92
 334              	.LCFI5:
 335              		.cfi_remember_state
 336              		.cfi_def_cfa_offset 4
 337              		@ sp needed
 338 006a 5DF804FB 		ldr	pc, [sp], #4
 339              	.L12:
ARM GAS  /tmp/ccf94hcN.s 			page 15


 340              	.LCFI6:
 341              		.cfi_restore_state
 118:Core/Src/main.c ****   }
 342              		.loc 1 118 5 is_stmt 1 view .LVU101
 343 006e FFF7FEFF 		bl	Error_Handler
 344              	.LVL11:
 345              	.L13:
 136:Core/Src/main.c ****   }
 346              		.loc 1 136 5 view .LVU102
 347 0072 FFF7FEFF 		bl	Error_Handler
 348              	.LVL12:
 349              	.L14:
 150:Core/Src/main.c ****   }
 350              		.loc 1 150 5 view .LVU103
 351 0076 FFF7FEFF 		bl	Error_Handler
 352              	.LVL13:
 353              		.cfi_endproc
 354              	.LFE133:
 356              		.section	.text.main,"ax",%progbits
 357              		.align	1
 358              		.global	main
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	main:
 364              	.LFB132:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 365              		.loc 1 65 1 view -0
 366              		.cfi_startproc
 367              		@ Volatile: function does not return.
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 08B5     		push	{r3, lr}
 371              	.LCFI7:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 375              		.loc 1 73 3 view .LVU105
 376 0002 FFF7FEFF 		bl	HAL_Init
 377              	.LVL14:
  80:Core/Src/main.c **** 
 378              		.loc 1 80 3 view .LVU106
 379 0006 FFF7FEFF 		bl	SystemClock_Config
 380              	.LVL15:
  87:Core/Src/main.c ****   MX_BlueNRG_MS_Init();
 381              		.loc 1 87 3 view .LVU107
 382 000a FFF7FEFF 		bl	MX_GPIO_Init
 383              	.LVL16:
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 384              		.loc 1 88 3 view .LVU108
 385 000e FFF7FEFF 		bl	MX_BlueNRG_MS_Init
 386              	.LVL17:
 387              	.L16:
  95:Core/Src/main.c ****   {
 388              		.loc 1 95 3 discriminator 1 view .LVU109
  99:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/ccf94hcN.s 			page 16


 389              		.loc 1 99 3 discriminator 1 view .LVU110
 390 0012 FFF7FEFF 		bl	MX_BlueNRG_MS_Process
 391              	.LVL18:
  95:Core/Src/main.c ****   {
 392              		.loc 1 95 9 discriminator 1 view .LVU111
 393 0016 FCE7     		b	.L16
 394              		.cfi_endproc
 395              	.LFE132:
 397              		.text
 398              	.Letext0:
 399              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4s5xx.h"
 400              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 401              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 402              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 403              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 404              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 405              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 406              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 407              		.file 11 "Core/Inc/app_bluenrg_ms.h"
 408              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 409              		.file 13 "<built-in>"
ARM GAS  /tmp/ccf94hcN.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccf94hcN.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccf94hcN.s:26     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccf94hcN.s:179    .text.MX_GPIO_Init:00000000000000b8 $d
     /tmp/ccf94hcN.s:184    .text.Error_Handler:0000000000000000 $t
     /tmp/ccf94hcN.s:190    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccf94hcN.s:222    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccf94hcN.s:228    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccf94hcN.s:357    .text.main:0000000000000000 $t
     /tmp/ccf94hcN.s:363    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_BlueNRG_MS_Init
MX_BlueNRG_MS_Process
